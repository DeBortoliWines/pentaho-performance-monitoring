2015-01-26 16:36:33,301 #0: Segment.load: executing sql [select sum("ORDERFACT"."QUANTITYORDERED") as "m0" from "ORDERFACT" as "ORDERFACT"] 
2015-01-26 16:36:33,315 #0: , exec 10 ms 
2015-01-26 16:36:33,328 #0: , exec+fetch 23 ms, 1 rows 
2015-01-26 16:36:42,677 #1: SqlTupleReader.readTuples [[Product].[(All)], [Time].[Years]]: executing sql [select "DIM_TIME"."YEAR_ID" as "c0" from "DIM_TIME" as "DIM_TIME", "ORDERFACT" as "ORDERFACT" where "ORDERFACT"."TIME_ID" = "DIM_TIME"."TIME_ID" group by "DIM_TIME"."YEAR_ID" order by CASE WHEN "DIM_TIME"."YEAR_ID" IS NULL THEN 1 ELSE 0 END, "DIM_TIME"."YEAR_ID" ASC] 
2015-01-26 16:36:42,799 #1: , exec 120 ms 
2015-01-26 16:36:42,802 #1: , exec+fetch 125 ms, 3 rows 
2015-01-26 16:36:42,842 #2: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct "YEAR_ID") from "DIM_TIME"] 
2015-01-26 16:36:42,843 #2: , exec 1 ms 
2015-01-26 16:36:42,844 #2: , exec+fetch 2 ms, 1 rows 
2015-01-26 16:36:42,859 #3: Segment.load: executing sql [select "DIM_TIME"."YEAR_ID" as "c0", sum("ORDERFACT"."QUANTITYORDERED") as "m0" from "DIM_TIME" as "DIM_TIME", "ORDERFACT" as "ORDERFACT" where "ORDERFACT"."TIME_ID" = "DIM_TIME"."TIME_ID" group by "DIM_TIME"."YEAR_ID"] 
2015-01-26 16:36:42,982 #3: , exec 123 ms 
2015-01-26 16:36:42,986 #3: , exec+fetch 127 ms, 3 rows 
